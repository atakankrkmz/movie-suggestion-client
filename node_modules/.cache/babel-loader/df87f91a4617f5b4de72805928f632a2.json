{"ast":null,"code":"var _jsxFileName = \"/home/otokon/Code/movie-suggestion-client/src/providers/AuthProvider.js\";\nimport React, { Component } from \"react\";\nimport logic from \"../logic/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: logic.isLoggedIn(),\n      user: {},\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onRegister = async e => {\n      e.preventDefault();\n      const {\n        firstname,\n        lastname,\n        email,\n        password\n      } = this.state;\n      await logic.register(firstname, lastname, email, password).then(() => {\n        this.setState({\n          isRegistered: true\n        });\n      }).catch(({\n        message\n      }) => {\n        this.setState({\n          error: message\n        });\n      });\n    };\n\n    this.onUpdate = async e => {\n      e.preventDefault();\n      await logic.retrieveUser().then(user => {\n        this.setState({\n          user\n        });\n      }).catch(err => console.log(err));\n      const {\n        id\n      } = this.state.user;\n      console.log(this.state);\n      const {\n        firstname,\n        lastname,\n        email,\n        password\n      } = this.state;\n      await logic.updateUser(id, firstname, lastname, email, password).then(() => {\n        this.setState({\n          isUpdated: true\n        });\n      }).catch(({\n        message\n      }) => {\n        this.setState({\n          error: message\n        });\n      });\n    };\n\n    this.onLogin = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      await logic.login(email, password).then(() => {\n        this.setState({\n          isLoggedIn: true,\n          email: \"\",\n          firstname: \"\",\n          lastname: \"\",\n          password: \"\"\n        });\n      }).catch(({\n        message\n      }) => {\n        this.setState({\n          isLoggedIn: false,\n          error: message\n        });\n      });\n    };\n\n    this.onLogout = async () => {\n      await logic.logout();\n      this.setState({\n        isLoggedIn: false\n      });\n    };\n\n    this.retrieveUser = async () => {\n      await logic.retrieveUser().then(user => {\n        this.setState({\n          user\n        });\n      });\n    };\n\n    this.onComment = async comment => {\n      await logic.addComment(comment);\n    };\n\n    this.clearErrors = () => {\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.fillStates = async () => {\n      await logic.retrieveUser().then(user => {\n        this.setState({\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  get actions() {\n    return {\n      onComment: this.onComment,\n      handleChange: this.handleChange,\n      onRegister: this.onRegister,\n      onUpdate: this.onUpdate,\n      onLogin: this.onLogin,\n      onLogout: this.onLogout,\n      retrieveUser: this.retrieveUser,\n      fillStates: this.fillStates,\n      clearErrors: this.clearErrors\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        store: this.state,\n        actions: this.actions\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["/home/otokon/Code/movie-suggestion-client/src/providers/AuthProvider.js"],"names":["React","Component","logic","Context","createContext","AuthProvider","state","isLoggedIn","user","firstname","lastname","email","password","error","handleChange","e","setState","target","name","value","onRegister","preventDefault","register","then","isRegistered","catch","message","onUpdate","retrieveUser","err","console","log","id","updateUser","isUpdated","onLogin","login","onLogout","logout","onComment","comment","addComment","clearErrors","fillStates","actions","render","children","props","store"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport logic from \"../logic/index.js\";\n\nexport const Context = React.createContext();\n\nclass AuthProvider extends Component {\n    state = {\n        isLoggedIn: logic.isLoggedIn(),\n        user: {},\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\",\n        error: \"\",\n    };\n\n    get actions() {\n        return {\n            onComment: this.onComment,\n            handleChange: this.handleChange,\n            onRegister: this.onRegister,\n            onUpdate: this.onUpdate,\n            onLogin: this.onLogin,\n            onLogout: this.onLogout,\n            retrieveUser: this.retrieveUser,\n            fillStates: this.fillStates,\n            clearErrors: this.clearErrors,\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    onRegister = async (e) => {\n        e.preventDefault();\n\n        const { firstname, lastname, email, password } = this.state;\n\n       await logic\n            .register(firstname, lastname, email, password)\n            .then(() => {\n                this.setState({\n                    isRegistered: true,\n                });\n            })\n            .catch(({ message }) => {\n                this.setState({\n                    error: message,\n                });\n            });\n    };\n\n    onUpdate = async (e) => {\n        \n        e.preventDefault();\n\n        await logic.retrieveUser().then(user =>{\n            this.setState({\n                user\n            })\n        }).catch(err => console.log(err));\n        const {id} = this.state.user;\n\n        console.log(this.state);\n        const { firstname, lastname, email, password } = this.state;\n        \n       await logic\n            .updateUser(id, firstname, lastname, email, password)\n            .then(() => {\n                this.setState({\n                    isUpdated: true,\n                });\n            })\n            .catch(({ message }) => {\n                this.setState({\n                    error: message,\n                });\n            });\n    };\n    onLogin = async (e) => {\n        e.preventDefault();\n\n        const { email, password } = this.state;\n\n       await logic\n            .login(email, password)\n            .then(() => {\n                this.setState({\n                    isLoggedIn: true,\n                    email: \"\",\n                    firstname: \"\",\n                    lastname: \"\",\n                    password: \"\",\n                });\n            })\n            .catch(({ message }) => {\n                this.setState({\n                    isLoggedIn: false,\n                    error: message,\n                });\n            });\n    };\n\n    onLogout = async () => {\n       await logic.logout();\n\n        this.setState({\n            isLoggedIn: false,\n        });\n    };\n\n    retrieveUser = async () => {\n        await logic.retrieveUser().then((user) => {\n            this.setState({\n                user,\n            });\n        });\n    };\n\n    onComment = async (comment) => {\n       await logic.addComment(comment);\n    };\n\n    clearErrors = () => {\n        this.setState({\n            error: \"\",\n        });\n    };\n\n    fillStates = async () =>{\n        await logic\n            .retrieveUser().then(\n                user => {\n                    this.setState({\n                        firstname: user.firstname,\n                        lastname: user.lastname,\n                        email: user.email,\n                    })\n                }\n            ).catch(err => console.log(err));\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return (\n            <Context.Provider\n                value={{\n                    store: this.state,\n                    actions: this.actions,\n                }}\n            >\n                {children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}