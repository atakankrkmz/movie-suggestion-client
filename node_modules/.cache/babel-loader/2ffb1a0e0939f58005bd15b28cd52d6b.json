{"ast":null,"code":"var _jsxFileName = \"/home/otokon/Code/MovieSuggestion/movie-suggestion-client/src/components/Movie/Movies.js\";\nimport React, { Component } from \"react\";\nimport Movie from \"./Movie.js\";\nimport MoviesConsumer from \"../../providers/MovieProvider.js\";\nimport axios from \"axios\";\nimport \"./Movie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: []\n    };\n\n    this.componentDidMount = async () => {\n      var response = await axios.get(`${API_URL}api/Genres/getall`);\n      let arrayState = [];\n      response.data.forEach(genre => {\n        //console.log(genre);\n        // console.log(\"model \" + model);\n        arrayState.push({\n          id: genre.id,\n          genreName: genre.genreName\n        });\n      });\n      this.setState({\n        genres: arrayState\n      });\n    };\n  }\n\n  render() {\n    // getting genre table from state\n    let genreArray = this.state.genres;\n    return /*#__PURE__*/_jsxDEV(MoviesConsumer, {\n      children: value => {\n        const {\n          movies\n        } = value;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"wrapper\",\n          style: {\n            marginLeft: 15\n          },\n          children: movies.map(movie => {\n            // define variable for genreNameForProp() function\n            let gnrnm = \"\"; // change gnrm variable with current movie's genreName\n\n            const genreNameForProp = () => {\n              genreArray.map(x => x.id === movie.genreId ? gnrnm = x.genreName : null);\n            }; //run genreNameForProp() function\n\n\n            genreNameForProp();\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Movie, {\n                movie: movie,\n                genre: gnrnm\n              }, movie.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/otokon/Code/MovieSuggestion/movie-suggestion-client/src/components/Movie/Movies.js"],"names":["React","Component","Movie","MoviesConsumer","axios","API_URL","process","env","REACT_APP_API_URL","Movies","state","genres","componentDidMount","response","get","arrayState","data","forEach","genre","push","id","genreName","setState","render","genreArray","value","movies","marginLeft","map","movie","gnrnm","genreNameForProp","x","genreId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BS,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE;AADF,KADqB;;AAAA,SAK7BC,iBAL6B,GAKT,YAAY;AAC9B,UAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,mBAArB,CAArB;AAEA,UAAIU,UAAU,GAAG,EAAjB;AAEAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAuBC,KAAD,IAAW;AAC/B;AACA;AACAH,QAAAA,UAAU,CAACI,IAAX,CAAgB;AAAEC,UAAAA,EAAE,EAAEF,KAAK,CAACE,EAAZ;AAAgBC,UAAAA,SAAS,EAAEH,KAAK,CAACG;AAAjC,SAAhB;AACD,OAJD;AAMA,WAAKC,QAAL,CAAc;AACZX,QAAAA,MAAM,EAAEI;AADI,OAAd;AAGD,KAnB4B;AAAA;;AAqB7BQ,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,UAAU,GAAG,KAAKd,KAAL,CAAWC,MAA5B;AAEA,wBACE,QAAC,cAAD;AAAA,gBACIc,KAAD,IAAW;AACV,cAAM;AAAEC,UAAAA;AAAF,YAAaD,KAAnB;AACA,4BACE;AAAK,UAAA,EAAE,EAAC,SAAR;AAAkB,UAAA,KAAK,EAAE;AAAEE,YAAAA,UAAU,EAAE;AAAd,WAAzB;AAAA,oBACGD,MAAM,CAACE,GAAP,CAAYC,KAAD,IAAW;AACrB;AACA,gBAAIC,KAAK,GAAG,EAAZ,CAFqB,CAIrB;;AACA,kBAAMC,gBAAgB,GAAG,MAAM;AAC7BP,cAAAA,UAAU,CAACI,GAAX,CAAgBI,CAAD,IACbA,CAAC,CAACZ,EAAF,KAASS,KAAK,CAACI,OAAf,GAA0BH,KAAK,GAAGE,CAAC,CAACX,SAApC,GAAiD,IADnD;AAGD,aAJD,CALqB,CAWrB;;;AACAU,YAAAA,gBAAgB;AAEhB,gCACE;AAAA,yBACG,GADH,eAEE,QAAC,KAAD;AAAsB,gBAAA,KAAK,EAAEF,KAA7B;AAAoC,gBAAA,KAAK,EAAEC;AAA3C,iBAAYD,KAAK,CAACT,EAAlB;AAAA;AAAA;AAAA;AAAA,sBAFF,EAEuD,GAFvD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAMD,WApBA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAyBD;AA5BH;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAzD4B;;AA2D/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"./Movie.js\";\nimport MoviesConsumer from \"../../providers/MovieProvider.js\";\nimport axios from \"axios\";\nimport \"./Movie.css\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass Movies extends Component {\n  state = {\n    genres: [],\n  };\n\n  componentDidMount = async () => {\n    var response = await axios.get(`${API_URL}api/Genres/getall`);\n\n    let arrayState = [];\n\n    response.data.forEach((genre) => {\n      //console.log(genre);\n      // console.log(\"model \" + model);\n      arrayState.push({ id: genre.id, genreName: genre.genreName });\n    });\n\n    this.setState({\n      genres: arrayState,\n    });\n  };\n\n  render() {\n    // getting genre table from state\n    let genreArray = this.state.genres;\n\n    return (\n      <MoviesConsumer>\n        {(value) => {\n          const { movies } = value;\n          return (\n            <div id=\"wrapper\" style={{ marginLeft: 15 }}>\n              {movies.map((movie) => {\n                // define variable for genreNameForProp() function\n                let gnrnm = \"\";\n\n                // change gnrm variable with current movie's genreName\n                const genreNameForProp = () => {\n                  genreArray.map((x) =>\n                    x.id === movie.genreId ? (gnrnm = x.genreName) : null\n                  );\n                };\n\n                //run genreNameForProp() function\n                genreNameForProp();\n\n                return (\n                  <ul>\n                    {\" \"}\n                    <Movie key={movie.id} movie={movie} genre={gnrnm} />{\" \"}\n                  </ul>\n                );\n              })}\n            </div>\n          );\n        }}\n      </MoviesConsumer>\n    );\n  }\n}\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}