{"ast":null,"code":"var _jsxFileName = \"/home/otokon/Code/MovieSuggestion/movie-suggestion-client/src/components/pages/DirectorDetailpage/MoviesByDirector.jsx\";\nimport React, { Component } from \"react\";\nimport Movie from \"../../Movie/Movie\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport default class MoviesByDirector extends Component {\n  constructor(...props) {\n    super(...props);\n    this._isMounted = false;\n\n    this.componentDidMount = async () => {\n      await axios.get(`${API_URL}api/Movies/getbydirector?director_id=${this.props.match.params.id}`).then(res => this.setState({\n        movies: res.data\n      })).catch(err => console.log(err));\n      await axios.get(`${API_URL}api/Genres/getall`).then(res => this.setState({\n        genres: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.genreNameForProp = this.genreNameForProp.bind(this);\n    this.state = {\n      movies: [],\n      genres: []\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  genreNameForProp(movie) {\n    let genreArray = this.state.genres;\n    let gnrnm = \"\";\n    genreArray.map(x => x.id === movie.genreId ? gnrnm = x.genreName : null);\n    return gnrnm;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: this.state.movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          movie: movie,\n          genre: this.genreNameForProp(movie)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/otokon/Code/MovieSuggestion/movie-suggestion-client/src/components/pages/DirectorDetailpage/MoviesByDirector.jsx"],"names":["React","Component","Movie","axios","API_URL","process","env","REACT_APP_API_URL","MoviesByDirector","constructor","props","_isMounted","componentDidMount","get","match","params","id","then","res","setState","movies","data","catch","err","console","log","genres","genreNameForProp","bind","state","componentWillUnmount","movie","genreArray","gnrnm","map","x","genreId","genreName","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,eAAe,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AAEtDQ,EAAAA,WAAW,CAAC,GAAGC,KAAJ,EAAW;AACpB,UAAM,GAAGA,KAAT;AADoB,SADtBC,UACsB,GADT,KACS;;AAAA,SAWtBC,iBAXsB,GAWF,YAAY;AAC9B,YAAMT,KAAK,CACRU,GADG,CAED,GAAET,OAAQ,wCAAuC,KAAKM,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAF3E,EAIHC,IAJG,CAIGC,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,GAAG,CAACG;AAAd,OAAd,CAJX,EAKHC,KALG,CAKIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALZ,CAAN;AAOA,YAAMpB,KAAK,CACRU,GADG,CACE,GAAET,OAAQ,mBADZ,EAEHa,IAFG,CAEGC,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAER,GAAG,CAACG;AAAd,OAAd,CAFX,EAGHC,KAHG,CAGIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHZ,CAAN;AAID,KAvBqB;;AAGpB,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKC,KAAL,GAAa;AACXT,MAAAA,MAAM,EAAE,EADG;AAEXM,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAgBDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKnB,UAAL,GAAkB,KAAlB;AACD;;AAEDgB,EAAAA,gBAAgB,CAACI,KAAD,EAAQ;AACtB,QAAIC,UAAU,GAAG,KAAKH,KAAL,CAAWH,MAA5B;AACA,QAAIO,KAAK,GAAG,EAAZ;AACAD,IAAAA,UAAU,CAACE,GAAX,CAAgBC,CAAD,IACbA,CAAC,CAACnB,EAAF,KAASe,KAAK,CAACK,OAAf,GAA0BH,KAAK,GAAGE,CAAC,CAACE,SAApC,GAAiD,IADnD;AAGA,WAAOJ,KAAP;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACG,KAAKT,KAAL,CAAWT,MAAX,CAAkBc,GAAlB,CAAuBH,KAAD,IAAW;AAChC,4BACE,QAAC,KAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,KAAK,EAAE,KAAKJ,gBAAL,CAAsBI,KAAtB;AAHT,WACOA,KAAK,CAACf,EADb;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AArDqD","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"../../Movie/Movie\";\nimport axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport default class MoviesByDirector extends Component {\n  _isMounted = false;\n  constructor(...props) {\n    super(...props);\n\n    this.genreNameForProp = this.genreNameForProp.bind(this);\n\n    this.state = {\n      movies: [],\n      genres: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    await axios\n      .get(\n        `${API_URL}api/Movies/getbydirector?director_id=${this.props.match.params.id}`\n      )\n      .then((res) => this.setState({ movies: res.data }))\n      .catch((err) => console.log(err));\n\n    await axios\n      .get(`${API_URL}api/Genres/getall`)\n      .then((res) => this.setState({ genres: res.data }))\n      .catch((err) => console.log(err));\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  genreNameForProp(movie) {\n    let genreArray = this.state.genres;\n    let gnrnm = \"\";\n    genreArray.map((x) =>\n      x.id === movie.genreId ? (gnrnm = x.genreName) : null\n    );\n    return gnrnm;\n  }\n  render() {\n    return (\n      <div id=\"wrapper\">\n        {this.state.movies.map((movie) => {\n          return (\n            <Movie\n              key={movie.id}\n              movie={movie}\n              genre={this.genreNameForProp(movie)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}